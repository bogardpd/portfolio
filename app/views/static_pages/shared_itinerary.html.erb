<% provide(:title, "Shared Itinerary")%>
<% provide(:meta_description, "How Paul Bogard created his Shared Itinerary web application.")%>

<h1>Shared Itinerary</h1>

<%= render partial: "project_tags", locals: {project: :"shared-itinerary"} %>

<%= link_buttons(
  LinkButton.new("Visit <strong>Shared Itinerary</strong>", "shared-itinerary", "https://www.shareditinerary.com/", target: :_blank),
  LinkButton.new("<strong>GitHub</strong> repository", "github", "https://github.com/bogardpd/shared_itinerary", target: :_blank)
  ) %>

<p>I’ve been to a lot of conferences, conventions, and trips where a group of people are coming on several different flights, yet trying to share cars from the airport. Traditionally, this has been a bit of an organizational challenge, usually involving having everyone post their flights to a shared spreadsheet. I created Shared Itinerary to show everyone’s flights visually, so you can easily see who’s arriving and departing at similar times.</p>

<h2 id="capabilities">Capabilities</h2>

<ul>
  <li>Stores incoming and returning flight data for multiple travelers to a specific event</li>
  <li>Generates SVG charts which visually depict the arrival and departure time for all travelers</li>
</ul>

<h2 id="tools">Tools</h2>

<table class="table tools-list">
	<tbody>
		<tr>
			<th scope="row">Languages &amp; Frameworks</th>
			<td><ul>
				<li>Ruby on Rails (2.5.1, 5.2.3)</li>
				<li>HTML</li>
				<li>CSS</li>
        <li>SCSS</li>
        <li>SVG</li>
				<li>JavaScript</li>
      </ul></td>
		</tr>
		<tr>
			<th scope="row">Database</th>
			<td><ul><li>PostgreSQL</li></ul></td>
		</tr>
		<tr>
			<th scope="row">Version Control</th>
			<td><ul><li><%= link_to "Git", "https://git-scm.com", target: :_blank %></li></ul></td>
		</tr>
		<tr>
			<th scope="row">Hosting</th>
			<td><ul><li><%= link_to "Heroku", "https://www.heroku.com/", target: :_blank %></li></ul></td>
		</tr>
		<tr>
			<th scope="row">Project Management</th>
			<td><ul><li><%= link_to "Trello", "https://trello.com/", target: :_blank %></li></ul></td>
		</tr>
	</tbody>
</table>

<h2 id="shared-itinerary">Shared Itinerary</h2>

<%= link_buttons(
  LinkButton.new("See the sample <strong>Shared Itinerary</strong> event", "shared-itinerary", "https://www.shareditinerary.com/events/1/share/089f040a3616898d", target: :_blank)
  ) %>

<p>Flight charts are the primary purpose of the Shared Itinerary. These charts show flights and layovers on each day for each attendee.</p>

<%= project_image("projects/shared-itinerary/screenshot-charts.png") %>

<p>For arrivals, the attendees are sorted by arrival airport and arrival time. For departures, the attendees are sorted by departure airport and departure time. This makes it easy for any given attendee to see if they’re arriving at or departing from the event at around the same time.</p>

<p>Below the charts are tables showing details for all of the travelers’ flights.</p>

<%= project_image("projects/shared-itinerary/screenshot-tables.png") %>

<p>The Shared Itinerary is designed to keep travelers’ flight information private. The creator of an event must give out a share link to allow anybody else access.</p>

<h2 id="history">History</h2>

<p>Since I’m such a fan of <%= link_to "tracking travel", flight_historian_path %>, I’ve often ended up being the person tabulating friends’ flight arrivals and departures for conventions.</p>

<p>In early 2015, a group of friends had started posting their flights for a summer convention we’d all be attending.</p>

<p>I’d recently been looking up flights on <%= link_to "ITA Matrix Airfare Search", "http://matrix.itasoftware.com/", target: :_blank %>, which has a time bar view that visually shows the times and durations of a large number of flights:</p>

<%= project_image("projects/shared-itinerary/time-bar.png") %>

<p>In this case, Matrix is showing a different flight option in each row, and you can easily see at a glance what flights depart around the same times. I realized that something similar to these time bars could work great to graphically show different travelers’ flight times, too, and began sketching out a prototype layout.</p>

<p>In order for this to work, I needed to be able to generate an image automatically from a collection of data. I’d had some experience with using both ASP and PHP to generate bar graphs. However, I’d wanted to learn how to generate Scalable Vector Graphics (SVG) images for a while. Since SVG could be embedded inline in HTML, it would be relatively easy to generate them in a Ruby on Rails application.</p>

<p>My initial prototype worked very well; I could provide a nested array of flight data and it would create time bar inspired charts of the flight times. However, an array wasn’t a good long term solution for flight data storage; I would be required to edit my code every time I wanted to add a new flight, and it wouldn’t allow me to let other people create their own group itineraries.</p>

<p>I created a simple database backend for the Shared Itinerary, with the following structure:</p>

<%= project_image("projects/shared-itinerary/class-diagram.png") %>

<p>From this structure, I could easily look up all flights associated with a given event and create the appropriate SVG charts.</p>

<h2 id="change-log">Change Log</h2>

<table class="table">
	<thead>
		<tr>
			<th>Date</th>
			<th>Release</th>
			<th>Changes</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>5 October 2016</th>
			<td>0.2</td>
			<td>Move chart code to <code>Chart</code> class</td>
		</tr>
		<tr>
			<td>19 June 2016</th>
			<td>0.1</td>
			<td>Beta</td>
		</tr>
	</tbody>
</table>