<% provide(:title, "Flight Historian 2.2")%>
<% provide(:meta_description, "Flight Historian version 2.2 change log")%>

<%= render(partial: "static_pages/flight_historian/version_h1", locals: @version) %>
<%= render(partial: "static_pages/flight_historian/version_picker") %>
<%= render(partial: "static_pages/flight_historian/version_summary", locals: @version) %>

<%= link_header "Regions", 2 %>

<p>Previously, <%= link_to("Flight Historian", "https://www.flighthistorian.com/", target: :_blank) %> had offered the ability to show maps with all worldwide flights, or to zoom in to the contiguous United States (CONUS). This had been accomplished by giving all airports an <code>is_conus</code> parameter in the database, which was set to true if the airport was <abbr title="Contiguous United States">CONUS</abbr>.</p>

<p>While the majority of my travel was within the US, I’d taken a few trips to other parts of the world, and I wanted to add the ability to zoom in on other regions. I ended up figuring out that I could <%= link_to "use airport ICAO codes to identify airports’ regions", "https://onehundredairports.com/2017/09/07/switching-flight-historian-to-icao-regions/", target: :_blank %>. Now, Flight Historian has the ability to filter by <%= link_to("World", "https://www.flighthistorian.com/flights?region=#flight-map", target: :_blank)%>, <%= link_to(ActiveSupport::SafeBuffer.new + "USA (" + content_tag(:abbr, "CONUS", title: "Contiguous United States") + ")", "https://www.flighthistorian.com/flights?region=K#flight-map", target: :_blank)%>, <%= link_to("Europe", "https://www.flighthistorian.com/flights?region=B-E-L#flight-map", target: :_blank)%>, and <%= link_to("Oceania", "https://www.flighthistorian.com/flights?region=N-PH-Y#flight-map", target: :_blank)%>. If I need to add a region in the future, it’s as easy as adding a single line of code with the name of the region and an array of ICAO prefixes.</p>

<%= project_image "projects/flight-historian/2-2/regions.png", type: :osx_screenshot, alt: "Screenshot of Flight Historian showing region select buttons" %>

<%= link_header "New Flight Updates", 2 %>

<p>While my <%= link_to("digital boarding pass import", flight_historian_path(version: "2.1".parameterize)) %> release has been immensely successful in saving me time adding flights, it’s not always possible to get a digital boarding pass. Flights that require a seat assignment at the gate, international codeshares, and other sorts of flights can all require a paper boarding pass, which I was unable to import.</p>

<p>However, paper boarding passes still have a <%= link_to("PDF417 barcode", "https://en.wikipedia.org/wiki/PDF417", target: :_blank) %> (which I could scan with a barcode reader app) containing some flight data, so I updated the flight log to support using this Bar Coded Boarding Pass (BCBP) data to pre-populate some new flight fields. Additionally, for situations where I didn’t even have a barcode available, I added the option to search for a flight by airline and flight number.</p>

<%= project_image "projects/flight-historian/2-2/new-flight-menu.png", type: :osx_screenshot, alt: "Screenshot of Flight Historian showing the New Flight Menu", caption: "I now have four ways to create a flight: emailing a digital boarding pass, scanning a paper boarding pass barcode, looking up an airline and flight number, and manually adding a flight." %>

<p>However, since the <abbr title="Bar Coded Boarding Pass">BCBP</abbr> and flight numbers inherently don’t have as much data as the Apple digital boarding pass, I had to rely much more heavily on looking up information on <%= link_to("FlightAware", "https://flightaware.com/", target: :_blank) %>’s <%= link_to("FlightXML API", "https://flightaware.com/commercial/flightxml/documentation2.rvt", target: :_blank) %>. I reworked the entire new flight process to essentially take as much information as it already knew, and use it to look up as much of the remaining information as possible:</p>

<%= project_image "projects/flight-historian/2-2/new-flight-lookup.png", type: :screenshot, alt: "Flowchart for the new flight lookup process" %>

<%= link_header "Tail Numbers", 2 %>

<p>While US tail numbers are purely letters and numbers (e.g. <%= link_to("N909EV", "https://www.flighthistorian.com/tails/N909EV", target: :_blank) %>), many international tail numbers commonly have dashes in them (e.g., <%= link_to("VH-OQI", "https://www.flighthistorian.com/tails/VHOQI", target: :_blank) %>). Previously, I stored the tail number in the database with those dashes present. However, since the dashes are technically optional, I now store the tail numbers in the database with the dashes removed, and I wrote a function to add dashes to tail numbers based on the countries they’re from.</p>

<%= link_header "Change Log", 2 %>

<%= link_header "Front End", 3 %>

<ul>
  <li>Added ICAO codes to airports</li>
  <li>Added capability to filter maps by multiple regions</li>
  <li>Added New Flight by BCBP capability</li>
  <li>Added New Flight by Flight Number capability</li>
  <li>Removed Edit Flight with Pass capability</li>
  <li>Minor UI fixes</li>
</ul>

<%= link_header "Back End", 3 %>

<ul>
  <li>Created <code>FlightXML</code> module for performing lookups on the <%= link_to("FlightXML API", "https://flightaware.com/commercial/flightxml/documentation2.rvt", target: :_blank) %></li>
  <li>Moved existing FlightXML lookups to new <code>FlightXML</code> module</li>
  <li>Added <code>icao_airport_code</code> to <code>Airports</code> model for region lookups, and removed <code>is_conus</code> parameter</li>
  <li>Removed parameters related to updating existing flights with new PKPasses</li>
  <li>Switch to storing tail numbers with no dashes, and added a tail number formatting method to the <code>TailNumber</code> module</li>
  <li>Minor bug fixes</li>
</ul>